{"ast":null,"code":"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".styles_container__1G6US {\\n  position: relative;\\n  width: max-content;\\n  padding-right: 60px;\\n}\\n\\n.styles_container__1G6US:hover .styles_editButton__h-8z3.styles_hoverToShow__1QXRL {\\n  display: block;\\n}\\n\\n.styles_input__1H6_Q {\\n  padding: 10px;\\n  display: block;\\n  font-size: 1em;\\n}\\n\\n.styles_hidden__CVoDj {\\n  display: none !important;\\n}\\n\\n.styles_editButton__h-8z3 {\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  transform: translate(-50%, -30%);\\n  border: none;\\n  background-color: transparent;\\n  color: lightgray;\\n  cursor: pointer;\\n  width: max-content;\\n}\\n\\n.styles_hoverToShow__1QXRL {\\n  display: none;\\n}\\n\\n.styles_editButton__h-8z3:hover {\\n  color: gray;\\n}\\n\\n.styles_editButton__h-8z3 > svg {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 1em;\\n  height: 1em;\\n  fill: lightgray;\\n  transform: translateX(100%);\\n}\\n\\n.styles_editButton__h-8z3:hover > svg {\\n  fill: gray;\\n}\\n\\n.styles_acceptButton__3LbwX, .styles_rejectButton__12lhC {\\n  position: absolute;\\n  top: 50%;\\n  right: 0;\\n  background-color: transparent;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.styles_acceptButton__3LbwX > svg, .styles_rejectButton__12lhC > svg {\\n  width: 1.5em;\\n  height: 1.5em;\\n  opacity: .7;\\n}\\n\\n.styles_acceptButton__3LbwX {\\n  transform: translate(-50%, -50%);\\n  fill: green;\\n}\\n\\n.styles_rejectButton__12lhC {\\n  transform: translate(70%, -50%);\\n  fill: red;\\n}\\n\\n.styles_acceptButton__3LbwX:hover > svg, .styles_rejectButton__12lhC:hover > svg {\\n  opacity: 1;\\n}\";\nvar styles = {\n  \"container\": \"styles_container__1G6US\",\n  \"editButton\": \"styles_editButton__h-8z3\",\n  \"hoverToShow\": \"styles_hoverToShow__1QXRL\",\n  \"input\": \"styles_input__1H6_Q\",\n  \"hidden\": \"styles_hidden__CVoDj\",\n  \"acceptButton\": \"styles_acceptButton__3LbwX\",\n  \"rejectButton\": \"styles_rejectButton__12lhC\"\n};\nstyleInject(css);\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar EditButton = function (_Component) {\n  inherits(EditButton, _Component);\n\n  function EditButton() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, EditButton);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = EditButton.__proto__ || Object.getPrototypeOf(EditButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      editMode: false,\n      inputValue: _this.props.children.props.children,\n      prevInputValue: _this.props.children.props.children\n    }, _this.handleEditButtonClick = function () {\n      console.log('handleEditButtonClick');\n\n      if (_this.props.onEditButtonClick && typeof _this.props.editMode === 'boolean') {\n        _this.props.onEditButtonClick();\n\n        _this.input.focus();\n      } else {\n        _this.setState({\n          editMode: true\n        }, function () {\n          _this.input.focus();\n        });\n      }\n    }, _this.handleOnContainerClick = function () {\n      console.log('handleOnContainerClick');\n\n      if (_this.props.onContainerClick && typeof _this.props.editMode === 'boolean') {\n        _this.props.onContainerClick();\n\n        _this.input.focus();\n      } else {\n        console.log(\"Function for 'OnContainerClick' not provided\");\n\n        _this.setState({\n          editMode: true\n        }, function () {\n          _this.input.focus();\n        });\n      }\n    }, _this.handleOnKeyPress = function (e) {\n      console.log('handleOnKeyPress');\n\n      if (e.key === 'Enter') {\n        _this.onAccept(e);\n      }\n    }, _this.handleOnKeyDown = function (e) {\n      if (e.keyCode === 27) {\n        _this.onReject(e);\n      }\n    }, _this.onAccept = function () {\n      var inputValue = typeof _this.props.inputProps['value'] !== 'undefined' ? _this.props.inputProps.value : _this.state.inputValue;\n      console.log('onAccept', inputValue);\n\n      _this.props.onAccept(inputValue);\n\n      _this.setState({\n        editMode: false,\n        prevInputValue: _this.state.inputValue\n      });\n    }, _this.onReject = function () {\n      console.log('onReject', _this.state.prevInputValue);\n\n      if (_this.props.onReject) {\n        _this.props.onReject(_this.state.prevInputValue);\n      }\n\n      _this.setState({\n        editMode: false,\n        inputValue: _this.state.prevInputValue\n      });\n    }, _this.handleInputChange = function (e) {\n      _this.setState({\n        inputValue: e.target.value\n      });\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(EditButton, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var handleEditButtonClick = this.handleEditButtonClick,\n          handleOnContainerClick = this.handleOnContainerClick,\n          handleOnKeyPress = this.handleOnKeyPress,\n          handleOnKeyDown = this.handleOnKeyDown,\n          onAccept = this.onAccept,\n          onReject = this.onReject;\n      var _props = this.props,\n          containerProps = _props.containerProps,\n          inputProps = _props.inputProps,\n          editButtonProps = _props.editButtonProps,\n          children = _props.children,\n          hideEditButton = _props.hideEditButton,\n          hoverToShowEditButton = _props.hoverToShowEditButton;\n      var placeholder = inputProps.placeholder;\n      var inputValue = typeof inputProps['value'] !== 'undefined' ? inputProps.value : this.state.inputValue;\n      var onInputChange = typeof inputProps['onChange'] !== 'undefined' ? inputProps.onChange : this.handleInputChange;\n      var text = editButtonProps.text,\n          icon = editButtonProps.icon;\n      var editMode = typeof this.props.editMode === 'undefined' ? this.state.editMode : this.props.editMode;\n      var inputClasses = [styles.input];\n      if (!editMode) inputClasses.push(styles.hidden);\n      var editButtonClasses = [styles.editButton];\n      if (hoverToShowEditButton) editButtonClasses.push(styles.hoverToShow);\n      {\n        return React.createElement('div', _extends({\n          className: ['EditButton', styles.container].join(' ')\n        }, containerProps), React.createElement('input', {\n          value: inputValue,\n          s: true,\n          placeholder: placeholder,\n          onChange: onInputChange,\n          className: inputClasses.join(' '),\n          onKeyPress: handleOnKeyPress,\n          onKeyDown: handleOnKeyDown,\n          ref: function ref(input) {\n            return _this2.input = input;\n          }\n        }), editMode && React.createElement(Fragment, null, React.createElement('button', {\n          className: styles.acceptButton,\n          onClick: onAccept\n        }, React.createElement('svg', {\n          xmlns: 'http://www.w3.org/2000/svg',\n          width: '24',\n          height: '24',\n          viewBox: '0 0 24 24'\n        }, React.createElement('path', {\n          d: 'M0 0h24v24H0z',\n          fill: 'none'\n        }), React.createElement('path', {\n          d: 'M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z'\n        }))), React.createElement('button', {\n          className: styles.rejectButton,\n          onClick: onReject\n        }, React.createElement('svg', {\n          xmlns: 'http://www.w3.org/2000/svg',\n          width: '24',\n          height: '24',\n          viewBox: '0 0 24 24'\n        }, React.createElement('path', {\n          d: 'M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'\n        }), React.createElement('path', {\n          d: 'M0 0h24v24H0z',\n          fill: 'none'\n        })))), !editMode && React.createElement(Fragment, null, React.createElement('div', {\n          onClick: !editMode ? handleOnContainerClick : null\n        }, children), !hideEditButton && React.createElement('button', {\n          onClick: handleEditButtonClick,\n          className: editButtonClasses.join(' ')\n        }, text || 'Edit', icon || React.createElement('svg', {\n          xmlns: 'http://www.w3.org/2000/svg',\n          width: '24',\n          height: '24',\n          viewBox: '0 0 24 24'\n        }, React.createElement('path', {\n          d: 'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z'\n        }), React.createElement('path', {\n          d: 'M0 0h24v24H0z',\n          fill: 'none'\n        })))));\n      }\n    }\n  }]);\n  return EditButton;\n}(Component);\n\nEditButton.defaultProps = {\n  inputProps: {},\n  editButtonProps: {}\n};\nEditButton.propTypes = {\n  children: PropTypes.shape({\n    props: PropTypes.shape({\n      children: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  containerProps: PropTypes.any,\n  inputProps: PropTypes.shape({\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    placeholder: PropTypes.string,\n    onChange: function onChange(props, propName, componentName) {\n      if (typeof props['value'] !== 'undefined' && (props[propName] == undefined || typeof props[propName] != 'function')) {\n        return new Error('Please provide an inputProps.onChange function');\n      }\n    }\n  }),\n  editButtonProps: PropTypes.shape({\n    text: PropTypes.string,\n    icon: PropTypes.any\n  }),\n  onEditButtonClick: function onEditButtonClick(props, propName, componentName) {\n    if (props['hideEditButton'] === true) {\n      return false;\n    } else if (typeof props['editMode'] === 'boolean' && (props[propName] == undefined || typeof props[propName] != 'function') && (props['onContainerClick'] == undefined || typeof props['onContainerClick'] != 'function')) {\n      return new Error('Please provide an onEditButtonClick or onContainerClick function');\n    }\n  },\n  onContainerClick: function onContainerClick(props, propName, componentName) {\n    if (typeof props['editMode'] === 'boolean' && props['hideEditButton'] === true && (props[propName] == undefined || typeof props[propName] != 'function')) {\n      return new Error('Please provide an onContainerClick function');\n    } else if (typeof props['editMode'] === 'boolean' && (props[propName] == undefined || typeof props[propName] != 'function') && (props['onEditButtonClick'] == undefined || typeof props['onEditButtonClick'] != 'function')) {\n      return new Error('Please provide an onEditButtonClick or onContainerClick function');\n    }\n  },\n  hideEditButton: PropTypes.bool,\n  editMode: PropTypes.bool,\n  onAccept: PropTypes.func.isRequired,\n  onReject: PropTypes.func,\n  hoverToShowEditButton: PropTypes.bool\n};\nexport default EditButton;","map":null,"metadata":{},"sourceType":"module"}